@model Cl_Entities.tbUsuario

@{
    Layout = null;
}

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Login</title>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <link rel="stylesheet" href="~/Content/font-awesome.min.css" />
</head>

<body>

    @using (Html.BeginForm("TrocaSenha", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", target = "_top", onsubmit = "return frmvalidaCampos(this)", language = "JavaScript", name = "frmTrocaSenha" }))
    {

        <div class="modal-dialog">
            <div class="modal-content">

                <div class="modal-header" style="background-color: dodgerblue !important;">
                    <button type="button" class="close" data-dismiss="modal"><span>×</span></button>
                    <h4 class="modal-title" style="color: white; text-align: center;">Formulario - Troca de senha</h4>
                </div>

                <div class="modal-body">

                    <i class="fa fa-exclamation-triangle" style="color: dodgerblue !important;">
                        <label style="color: black;">Preencha os campos abaixo para que sua senha seja alterada!</label>
                    </i>

                    <div class="form-group">
                        <div class="col-md-12 col-lg-12 col-sm-12" style="margin-top: 10px !important;">
                            <label for="txtLogin" class="font-label">Login do Usuario</label>
                            @Html.TextBoxFor(model => model.tbUsuario_Login, new { @class = "form-control", @style = "border-radius:4px", @name = "txtLogin", id = "txtLogin", maxlength = "60", @readonly = "readonly" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-12 col-lg-12 col-sm-12" style="margin-top: 10px !important;">
                            <label for="txtSenha" class="font-label">Senha Atual</label>
                            @Html.PasswordFor(model => model.tbUsuario_Senha, new { @class = "form-control", @style = "border-radius:4px", @name = "txtSenha", id = "txtSenha", maxlength = "10" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-12 col-lg-12 col-sm-12" style="margin-top: 10px !important;">
                            <label for="txtNovaSenha" class="font-label">Nova Senha</label>
                            @Html.PasswordFor(model => model.NovaSenha, new { @class = "form-control", @style = "border-radius:4px", @name = "txtNovaSenha", id = "txtNovaSenha", maxlength = "10" })
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <div style="float: right !important;">
                            <button type="button" class="btn limpar" value="Cancelar" style="background-color: dodgerblue; color: white;"> <i class="fa fa-eraser"> Limpar</i></button>
                            <button type="submit" class="btn" value="Confirmar" style="background-color: dodgerblue; color: white;"> <i class="fa fa-save"> Confirmar</i></button>
                    </div>
                </div>
            </div>
        </div>
    }

</body>
</html>

<script type="text/javascript">
    toastr.options = {
        "closeButton": true,
        "debug": false,
        "newestOnTop": true,
        "progressBar": true,
        "positionClass": "toast-bottom-right",
        "preventDuplicates": false,
        "onclick": null,
        "showDuration": "300",
        "hideDuration": "1000",
        "timeOut": "5000",
        "extendedTimeOut": "1000",
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut"
    }

    function frmvalidaCampos(objForm) {

        var senha = '@ViewBag.Senha';

        if (frmTrocaSenha.txtLogin.value == '') {
            toastr.warning('Informe o seu login', 'Login');
            frmTrocaSenha.txtLogin.focus();
            return (false);
        }

        if (frmTrocaSenha.txtSenha.value == '') {
            toastr.warning('Informe a senha atual', 'Senha atual');
            frmTrocaSenha.txtSenha.focus();
            return (false);
        }

        if (frmTrocaSenha.txtSenha.value.length > 30) {
            toastr.warning('A nova senha deve ter no máximo 30 caracters', 'Senha atual');
            frmTrocaSenha.txtSenha.focus();
            return (false);
        }

        if (frmTrocaSenha.txtNovaSenha.value == '') {
            toastr.warning('Informe a nova senha', 'Nova senha');
            frmTrocaSenha.txtNovaSenha.focus();
            return (false);
        }

        if (frmTrocaSenha.txtNovaSenha.value.length > 30) {
            toastr.warning('A nova senha deve ter no máximo 30 caracters', 'Nova senha');
            frmTrocaSenha.txtNovaSenha.focus();
            return (false);
        }

        if (frmTrocaSenha.txtNovaSenha.value != senha)
        {
            toastr.error('As senhas não coicidem, favor corrigir!', 'Nova senha');
            frmTrocaSenha.txtNovaSenha.focus();
            return (false);
        }

        $('#txtSenha').val(senha);

        return (true);
    }
</script>

<script>
    $(".limpar").click(function () {
        $("#txtSenha").val('');
        $("#txtNovaSenha").val('');
        $("#txtSenha").focus();
    });
</script> 